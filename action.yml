name: Test-PSModule (by PSModule)
description: Test a PowerShell module before publishing the module to the PowerShell Gallery.
author: PSModule
branding:
  icon: check-square
  color: gray-dark

inputs:
  Name:
    description: The name of the module to test. The name of the repository is used if not specified.
    required: false
  Path:
    description: The path to the code to test.
    required: true
  TestType:
    description: The type of tests to run. Can be either 'Module' or 'SourceCode'.
    required: true
  # Debug:
  #   description: Enable debug output.
  #   required: false
  #   default: 'false'
  # Verbose:
  #   description: Enable verbose output.
  #   required: false
  #   default: 'false'
  # Version:
  #   description: Specifies the version of the GitHub module to be installed. The value must be an exact version.
  #   required: false
  # Prerelease:
  #   description: Allow prerelease versions if available.
  #   required: false
  #   default: 'false'

outputs:
  passed:
    description: If the tests passed.
    value: ${{ fromJSON(steps.test.outputs.result).passed }}

runs:
  using: composite
  steps:
    - name: Get test paths
      uses: PSModule/Github-Script@v1
      id: paths
      env:
        Name: ${{ inputs.Name }}
        Path: ${{ inputs.Path }}
        TestType: ${{ inputs.TestType }}
      with:
        Script: |
          # If test type is module, the code we ought to test is in the path/name folder, otherwise it's in the path folder.
          Write-Host "Test type: [$env:TestType]"
          $path = switch($env:TestType) {
            'Module' {
              Resolve-Path -Path "$env:Path/$env:Name" | Select-Object -ExpandProperty Path
            }
            'SourceCode' {
              Resolve-Path -Path $env:Path | Select-Object -ExpandProperty Path
            }
            default {
              throw "Invalid test type: [$env:TestType]"
            }
          }
          Write-Host "Path: [$path]"
          Set-GitHubOutput -Name Path -Value $path

    - name: Invoke-Pester
      uses: PSModule/Invoke-Pester@v1.1.1-preview
      id: test
      with:
        Path: ${{ github.action_path }}/scripts/tests/${{ inputs.TestType }}
        Run_Path: ${{ fromJson(steps.paths.outputs.result).Path }}
